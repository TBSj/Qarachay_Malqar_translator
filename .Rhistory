.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s') + 1}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген')]
View(df_n_one_sentence)
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), str_count := str_count + 1] %>%
.[, rowid := .I]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng := krc_leng + 1,
rus_leng := rus_leng + 1
)] %>%
.[, rowid := .I]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1)]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I]
df_n_one_sentence0 <- df_n_one_sentence %>%
copy %>%
.[krc_leng == rus_leng] %>%
.[rus_leng > 1] %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus'))
df_n_one_sentence0 <- df_n_one_sentence %>%
copy %>%
.[krc_leng == rus_leng] %>%
.[rus_leng > 1]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus'))
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')]
View(df_n_one_sentence)
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus'))
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, list), .SDcols = c('krc', 'rus')]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
# .[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
# .[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
# .[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
#                                                                    rus_leng = rus_leng + 1
#                                                                    )] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, list), .SDcols = c('krc', 'rus')]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
# .[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
# .[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
# .[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
#                                                                    rus_leng = rus_leng + 1
#                                                                    )] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, as.list), .SDcols = c('krc', 'rus')]
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, as.list), .SDcols = c('krc', 'rus')] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus'))
df_n_one_sentence
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, as.list), .SDcols = c('krc', 'rus')] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus')) %>%
as.data.table()
df_all_before_100 <- list(df_n_one_sentence,
df_n_one_word) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus))
df_n_one_sentence
df_n_one_word
df_n_one_sentence <- list(df_n_short,
df_long_n) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus)) %>%
.[, c('krc', 'rus') := lapply(.SD, function(x) {str_replace_all(x, '…', ",")}), .SDcols = c('krc', 'rus')] %>%
.[, c('krc_leng', 'rus_leng') := lapply(.SD, function(x) {str_count(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
.[str_detect(krc, pattern = 'деб|деди|деген', negate = TRUE), `:=`(krc_leng = krc_leng + 1,
rus_leng = rus_leng + 1
)] %>%
.[, rowid := .I] %>%
.[, c('krc', 'rus') := lapply(.SD, as.list), .SDcols = c('krc', 'rus')] %>%
.[(krc_leng == rus_leng) & (rus_leng > 1), c('krc', 'rus') := lapply(.SD, function(x) {str_split(x, '(?<=[.!?])\\s')}), .SDcols = c('krc', 'rus')] %>%
unnest(cols = c('krc', 'rus')) %>%
as.data.table() %>%
.[, .(krc, rus, file)]
df_all_before_100 <- list(df_n_one_sentence,
df_n_one_word) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus))
df_all <- list(df_all_before_100,
df_n_several_sentence) %>%
rbindlist(use.names = TRUE) %>%
unique(cols = c(krc, rus))
fwrite(df_all_before_100[, .(krc, rus)], file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'All_one.csv'), sep = ';') # Къысха, 100 сёзге дери
fwrite(df_all[, .(krc, rus)], file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'All.csv'), sep = ';') # Бары да
fwrite(df_n_several_sentence[, .(krc, rus)], file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'Several_sentence.csv'), sep = ';') # Кёб
fwrite(df_n_one_sentence[, .(krc, rus)], file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'One_sentence.csv'), sep = ';') # Бир айтым
fwrite(df_n_one_word[, .(krc, rus)], file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'One_word.csv'), sep = ';') # Бир сёз
copy(df_all) %>%
as.data.table() %>%
.[, file_name := fcase(file == 'jomaq', 'Сказки из приложения "Джомакъла"',
file == 'alan', 'Аланский историко-героический эпос',
file == 'quli', 'Стихи Кайсына Кулиева',
file == 'jiyim', 'СВОД КАРАЧАЕВО-БАЛКАРСКОГО ФОЛЬКЛОРА',
file == 'adet', 'Узденьский кодекс',
file == 'quran', 'Коран',
file == 'injil', 'Новый завет',
file == 'zabur', 'Псалтырь',
file == 'unus', 'Книга пророка Ионы',
file == 'danial', 'Книга пророка Даниила',
file == 'rut', 'Руфь',
file == 'ester', 'Эсфирь',
file == 'ali', 'Фильмы, мультики, советские доклады',
file == 'tylmach', 'Карачаево-Балкарский разговорник',
file %in% c('sozluk_bir', 'sozluk_biraz'), 'Словарь'
)] %>%
# list(fread(file.path(FILEPATH_SOURCE_PREPARED, 'Quran_biraz_processed.csv')) %>%
#             .[, file := 'quran_biraz'] %>%
#             .[, .(krc, rus, file)]) %>%
# rbindlist(use.names = TRUE) %>%
openxlsx::write.xlsx(file.path(FILEPATH_SOURCE_PREPARED, 'Common', 'All_sentences.xlsx'))
toModel <- function(string){
string %>%
str_replace_all('\\bсебеп|\\bсебеб', 'себеb') %>%
str_replace_all('\\bСебеп|\\bСебеб', 'Себеb') %>%
str_replace_all('\\bтюйюл', 'тюл') %>%
str_replace_all('\\bТюйюл', 'Тюл') %>%
str_replace_all('\\bуку', 'гылын qуш') %>%
str_replace_all('\\bУку', 'Гылын qуш') %>%
str_replace_all('\\bхораз', 'гугурукку') %>%
str_replace_all('\\bХораз', 'Гугурукку') %>%
str_replace_all('\\bюзмез', 'qум') %>%
str_replace_all('\\bЮзмез', 'Qум') %>%
str_replace_all('\\bарап|\\bараб', 'араb') %>%
str_replace_all('\\bАрап|\\bАраб', 'Араb') %>%
str_replace_all('\\bжиля|\\bжыла|\\bджыла', 'jыла') %>%
str_replace_all('\\bЖиля|\\bЖыла|\\bДжыла', 'Jыла') %>%
str_replace_all('\\bярабий|\\bарабий', 'арабин') %>%
str_replace_all('\\bЯрабий|\\bАрабий', 'Арабин') %>%
str_replace_all('нтта', 'нтда') %>%
str_replace_all('ртте', 'ртде') %>%
str_replace_all('\\bжамауат|\\bжамагъат|\\bджамагъат|\\bжамауат', 'jамаgат') %>%
str_replace_all('\\bЖамауат|\\bЖамагъат|\\bДжамагъат|\\bЖамаўат', 'Jамаgат') %>%
str_replace_all('\\bшуёх', 'шох') %>%
str_replace_all('\\bШуёх', 'Шох') %>%
str_replace_all('\\bшёндю|\\bбусагъат', 'бусаgат') %>%
str_replace_all('\\bШёндю|\\bБусагъат', 'Бусаgат') %>%
str_replace_all('\\bугъай|\\bогъай', 'оgай') %>%
str_replace_all('\\bУгъай|\\bОгъай', 'Оgай') %>%
# str_replace_all('\\bтерк', 'тез') %>%
# str_replace_all('\\bтерк', 'тез') %>%
str_replace_all('\\bсанга|\\bсеннге|\\bсенге', 'сенnе') %>%
str_replace_all('\\bСанга|\\bСеннге|\\bСенге', 'Сенnе') %>%
str_replace_all('\\bманга|\\bменнге|\\bменге', 'менnе') %>%
str_replace_all('\\bМанга|\\bМеннге|\\bМенге', 'Менnе') %>%
str_replace_all('\\bаякъ жол|\\bаякъ джол|\\bджахтана|\\bжахтана', 'jахтана') %>%
str_replace_all('\\bАякъ жол|\\bАякъ джол|\\bДжахтана|\\bЖахтана', 'Jахтана') %>%
str_replace_all('\\bкъамж|\\bкъамыж', 'qамыzh') %>%
str_replace_all('\\bКъамж|\\bКъамыж', 'Qамыzh') %>%
str_replace_all('\\bкъымыж|\\bкъымыж', 'qымыzh') %>%
str_replace_all('\\bКъымыж|\\bКъымыж', 'Qымыzh') %>%
str_replace_all('\\bхау\\b|\\bхаў\\b', 'хо') %>%
str_replace_all('\\bХау\\b|\\bХаў\\b', 'Хо') %>%
str_replace_all('\\bуа\\b|\\bўа\\b', 'wa') %>%
str_replace_all('\\bУа\\b|\\bЎа\\b', 'Wa') %>%
str_replace_all('п\\b|б\\b', 'b') %>%
str_replace_all('къ', 'q') %>%
str_replace_all('Къ|КЪ', 'Q') %>%
str_replace_all('гъ', 'g') %>%
str_replace_all('Гъ|ГЪ', 'G') %>%
str_replace_all('ц', 'ч') %>%
str_replace_all('Ц', 'Ч') %>%
str_replace_all('дж', 'j') %>%
str_replace_all('Дж|ДЖ', 'J') %>%
str_replace_all('ж', 'j') %>%
str_replace_all('Ж', 'J') %>%
str_replace_all('ф', 'п') %>%
str_replace_all('Ф', 'П') %>%
str_replace_all('\\bсыпат', 'сыфат') %>%
str_replace_all('\\bСыпат', 'Сыфат') %>%
str_replace_all('(?<=[аыоуэеиёюя])у(?=[аыоуэеиёюя])|(?<=[аыоуэеиёюя])ў(?=[аыоуэеиёюя])|(?<=[АЫОУЭЕИЁЮЯ])у(?=[АЫОУЭЕИЁЮЯ])|(?<=[АЫОУЭЕИЁЮЯ])ў(?=[АЫОУЭЕИЁЮЯ])', 'w') %>%
str_replace_all('(?<=[аыоуэеиёюя])у|(?<=[аыоуэеиёюя])ў|(?<=[АЫОУЭЕИЁЮЯ])у|(?<=[АЫОУЭЕИЁЮЯ])ў', 'w') %>%
# str_replace_all('у(?=[аыоуэеиёюя])|ў(?=[аыоуэеиёюя])|у(?=[АЫОУЭЕИЁЮЯ])|ў(?=[АЫОУЭЕИЁЮЯ])', 'w') %>%
# str_replace_all('У(?=[аыоуэеиёюя])|Ў(?=[аыоуэеиёюя])|У(?=[АЫОУЭЕИЁЮЯ])|Ў(?=[АЫОУЭЕИЁЮЯ])', 'W') %>%
str_replace_all('zh', 'ж') %>%
str_replace_all('нг', 'n') %>%
str_replace_all('Нг|НГ', '  N')
# str_replace_all('\\bчап', 'чаб')  # чаб бла
}
fromModel <- function(string,
dialect = 'qrc' # 'hlm', 'mqr'
){
if(dialect == 'qrc'){
string %>%
str_replace_all('\\bтюйюл', 'тюл') %>%
str_replace_all('\\bТюйюл', 'Тюл') %>%
str_replace_all('\\bуку', 'гылын  qуш') %>%
str_replace_all('\\bУку', 'Гылын  qуш') %>%
str_replace_all('\\bхораз', 'гугурукку') %>%
str_replace_all('\\bХораз', 'Гугурукку') %>%
str_replace_all('\\bюзмез', 'qум') %>%
str_replace_all('\\bЮзмез', 'Qум') %>%
str_replace_all('\\bjиля', 'jыла') %>%
str_replace_all('\\bJиля', 'Jыла') %>%
str_replace_all('\\bярабий|\\bарабий', 'арабин') %>%
str_replace_all('\\bЯрабий|\\bАрабий', 'Арабин') %>%
str_replace_all('нтта', 'нтда') %>%
str_replace_all('ртте', 'ртде') %>%
str_replace_all('\\bjамауат|\\bjамаwат', 'jамаgат') %>%
str_replace_all('\\bJамауат|\\bJамаwат', 'Jамаgат') %>%
str_replace_all('\\bшуёх', 'шох') %>%
str_replace_all('\\bШуёх', 'Шох') %>%
str_replace_all('\\bшёндю', 'бусаgат') %>%
str_replace_all('\\bШёндю', 'Бусаgат') %>%
str_replace_all('\\bуgай', 'оgай') %>%
str_replace_all('\\bУgай', 'Оgай') %>%
# str_replace_all('\\bтерк', 'тез') %>%
str_replace_all('\\bсаnа|\\bсеnе', 'сенnе') %>%
str_replace_all('\\bСаnа|\\bСеnе', 'Сенnе') %>%
str_replace_all('\\bмаnа|\\bмеnе', 'менnе') %>%
str_replace_all('\\bМаnа|\\bМеnе', 'Менnе') %>%
str_replace_all('\\bаяq jол', 'jахтана') %>%
str_replace_all('\\bАяq jол', 'Jахтана') %>%
str_replace_all('\\bсыbат', 'сыфат') %>%
str_replace_all('\\bСыbат', 'Сыфат') %>%
str_replace_all('b', 'б') %>%
str_replace_all('q', 'къ') %>%
str_replace_all('Q', 'Къ') %>%
str_replace_all('g', 'гъ') %>%
str_replace_all('G', 'Гъ') %>%
str_replace_all('j', 'дж') %>%
str_replace_all('J', 'Дж') %>%
str_replace_all('w', 'ў') %>%
str_replace_all('W', 'Ў') %>%
str_replace_all('n', 'нг') %>%
str_replace_all('N', 'Нг')
} else if(dialect == 'hlm'){
string %>%
str_replace_all('\\bтюл', 'тюйюл') %>%
str_replace_all('\\bТюл', 'Тюйюл') %>%
str_replace_all('\\bгылын  qуш', 'уку') %>%
str_replace_all('\\bГылын  qуш', 'Уку') %>%
str_replace_all('\\bгугурукку', 'хораз') %>%
str_replace_all('\\bГугурукку', 'Хораз') %>%
str_replace_all('\\bqум', 'юзмез') %>%
str_replace_all('\\bQум', 'Юзмез') %>%
str_replace_all('\\bjыла', 'jиля') %>%
str_replace_all('\\bJыла', 'Jиля') %>%
str_replace_all('\\bарабин|\\bарабий', 'ярабий') %>%
str_replace_all('\\bАрабин|\\bАрабий', 'Ярабий') %>%
str_replace_all('нтда', 'нтта') %>%
str_replace_all('ртде', 'ртте') %>%
str_replace_all('\\bjамаgат', 'jамаwат') %>%
str_replace_all('\\bJамаgат', 'Jамаwат') %>%
str_replace_all('\\bшох', 'шуёх') %>%
str_replace_all('\\bШох', 'Шуёх') %>%
str_replace_all('\\bбусаgат', 'шёндю') %>%
str_replace_all('\\bБусаgат', 'Шёндю') %>%
str_replace_all('\\bоgай', 'уgай') %>%
str_replace_all('\\bОgай', 'Уgай') %>%
str_replace_all('\\bтез', 'терк') %>%
str_replace_all('\\bсенnе|\\bсеnе', 'саnа') %>%
str_replace_all('\\bСенnе|\\bСеnе', 'Саnа') %>%
str_replace_all('\\bменnе|\\bмеnе', 'маnа') %>%
str_replace_all('\\bМенnе|\\bМеnе', 'Маnа') %>%
str_replace_all('\\bjахтана', 'аяq jол') %>%
str_replace_all('\\bJахтана', 'аяq jол') %>%
str_replace_all('\\bхо\\b', 'хаw') %>%
str_replace_all('\\bХо\\b', 'Хаw') %>%
str_replace_all('\\bсыbат', 'сыфат') %>%
str_replace_all('\\bСыbат', 'Сыфат') %>%
str_replace_all('b', 'п') %>%
str_replace_all('q', 'къ') %>%
str_replace_all('Q', 'Къ') %>%
str_replace_all('g', 'гъ') %>%
str_replace_all('G', 'Гъ') %>%
str_replace_all('j', 'ж') %>%
str_replace_all('J', 'Ж') %>%
str_replace_all('w', 'ў') %>%
str_replace_all('W', 'Ў') %>%
str_replace_all('n', 'нг') %>%
str_replace_all('N', 'Нг')
} else if(dialect == 'mqr'){
string %>%
str_replace_all('\\bтюл', 'тюйюл') %>%
str_replace_all('\\bТюл', 'Тюйюл') %>%
str_replace_all('\\bгылын  qуш', 'уку') %>%
str_replace_all('\\bГылын  qуш', 'Уку') %>%
str_replace_all('\\bгугурукку', 'хораз') %>%
str_replace_all('\\bГугурукку', 'Хораз') %>%
str_replace_all('\\bqум', 'юзмез') %>%
str_replace_all('\\bQум', 'Юзмез') %>%
str_replace_all('\\bjыла', 'jиля') %>%
str_replace_all('\\bJыла', 'Jиля') %>%
str_replace_all('\\bарабин|\\bарабий', 'ярабий') %>%
str_replace_all('\\bАрабин|\\bАрабий', 'Ярабий') %>%
str_replace_all('нтда', 'нтта') %>%
str_replace_all('ртде', 'ртте') %>%
str_replace_all('\\bjамаgат', 'jамаwат') %>%
str_replace_all('\\bJамаgат', 'Jамаwат') %>%
str_replace_all('\\bшох', 'шуёх') %>%
str_replace_all('\\bШох', 'Шуёх') %>%
str_replace_all('\\bбусаgат', 'шёндю') %>%
str_replace_all('\\bБусаgат', 'Шёндю') %>%
str_replace_all('\\bоgай', 'уgай') %>%
str_replace_all('\\bОgай', 'Уgай') %>%
str_replace_all('\\bтез', 'терк') %>%
str_replace_all('\\bсенnе|\\bсеnе', 'саnа') %>%
str_replace_all('\\bСенnе|\\bСеnе', 'Саnа') %>%
str_replace_all('\\bменnе|\\bмеnе', 'маnа') %>%
str_replace_all('\\bМенnе|\\bМеnе', 'Маnа') %>%
str_replace_all('\\bjахтана', 'аяq jол') %>%
str_replace_all('\\bJахтана', 'аяq jол') %>%
str_replace_all('\\bхо\\b', 'хаw') %>%
str_replace_all('\\bХо\\b', 'Хаw') %>%
str_replace_all('\\bсыbат', 'сыфат') %>%
str_replace_all('\\bСыbат', 'Сыфат') %>%
str_replace_all('b', 'п') %>%
str_replace_all('q', 'къ') %>%
str_replace_all('Q', 'Къ') %>%
str_replace_all('g', 'гъ') %>%
str_replace_all('G', 'Гъ') %>%
str_replace_all('j', 'з') %>%
str_replace_all('J', 'З') %>%
str_replace_all('w', 'ў') %>%
str_replace_all('W', 'Ў') %>%
str_replace_all('n', 'нг') %>%
str_replace_all('N', 'Нг') %>%
str_replace_all('ч', 'ц') %>%
str_replace_all('Ч', 'Ц') %>%
str_replace_all('п', 'ф') %>%
str_replace_all('П', 'Ф') %>%
str_replace_all('къ\\b|гъ\\b', 'х')
}
}
fwrite(copy(df_all_before_100)[, .(krc, rus)][, krc := toModel(krc)], file.path(FILEPATH_SOURCE_PREPARED, 'Common/to_model', 'All_one_model.csv'), sep = ';')
fwrite(copy(df_all)[, .(krc, rus)][, krc := toModel(krc)], file.path(FILEPATH_SOURCE_PREPARED, 'Common/to_model', 'All_model.csv'), sep = ';')
fwrite(copy(df_n_several_sentence)[, .(krc, rus)][, krc := toModel(krc)], file.path(FILEPATH_SOURCE_PREPARED, 'Common/to_model', 'Several_sentence_model.csv'), sep = ';')
fwrite(copy(df_n_one_sentence)[, .(krc, rus)][, krc := toModel(krc)], file.path(FILEPATH_SOURCE_PREPARED, 'Common/to_model', 'One_sentence_model.csv'), sep = ';')
fwrite(copy(df_n_one_word)[, .(krc, rus)][, krc := toModel(krc)], file.path(FILEPATH_SOURCE_PREPARED, 'Common/to_model', 'One_word_model.csv'), sep = ';')
reticulate::repl_python()
df_all_all
df_all_all["krc2rus"][x]]
df_all_all["krc2rus"]
df_all_all["krc2rus"][x]
t
t = 'Иш къолай болсун'
model_all
model_one
model_sev
model_one = AutoModelForSeq2SeqLM.from_pretrained(MODEL_PATH_QM_ONE)
translate(model_input=model_one, text=t, src_lang='krc_Cyrl', tgt_lang='rus_Cyrl')
def translate(model_input,
text, src_lang='rus_Cyrl', tgt_lang='eng_Latn',
a=32, b=3, max_input_length=1024, num_beams=4, **kwargs
):
"""Turn a text or a list of texts into a list of translations"""
tokenizer.src_lang = src_lang
tokenizer.tgt_lang = tgt_lang
inputs = tokenizer(
text, return_tensors='pt', padding=True, truncation=True,
max_length=max_input_length
)
model_input.eval() # turn off training mode
result = model_input.generate(
**inputs.to(model_input.device),
forced_bos_token_id=tokenizer.convert_tokens_to_ids(tgt_lang),
max_new_tokens=int(a + b * inputs.input_ids.shape[1]),
num_beams=num_beams, **kwargs
)
return tokenizer.batch_decode(result, skip_special_tokens=True)
translate(model_input=model_one, text=t, src_lang='krc_Cyrl', tgt_lang='rus_Cyrl')
tokenizer = NllbTokenizer.from_pretrained(MODEL_PATH_QM_ONE) # MODEL_PATH_RAW
fix_tokenizer(tokenizer)
def fix_tokenizer(tokenizer, new_lang=LANG_UNICODE):
"""
Add a new language token to the tokenizer vocabulary
(this should be done each time after its initialization)
"""
old_len = len(tokenizer) - int(new_lang in tokenizer.added_tokens_encoder)
tokenizer.lang_code_to_id[new_lang] = old_len-1
tokenizer.id_to_lang_code[old_len-1] = new_lang
# always move "mask" to the last position
tokenizer.fairseq_tokens_to_ids["<mask>"] = len(tokenizer.sp_model) + len(tokenizer.lang_code_to_id) + tokenizer.fairseq_offset
tokenizer.fairseq_tokens_to_ids.update(tokenizer.lang_code_to_id)
tokenizer.fairseq_ids_to_tokens = {v: k for k, v in tokenizer.fairseq_tokens_to_ids.items()}
if new_lang not in tokenizer._additional_special_tokens:
tokenizer._additional_special_tokens.append(new_lang)
# clear the added token encoder; otherwise a new token may end up there by mistake
tokenizer.added_tokens_encoder = {}
tokenizer.added_tokens_decoder = {}
fix_tokenizer(tokenizer)
translate(model_input=model_one, text=t, src_lang='krc_Cyrl', tgt_lang='rus_Cyrl')
ф=translate(model_input=model_one, text=t, src_lang='krc_Cyrl', tgt_lang='rus_Cyrl')
ф[0]
